require "Assets.Scripts.Lua.Items.Header" --定义了一些常量
--文件名为注册名
--物品的属性表
properties = {
	Name =					"TestItem";--物品名
	Type =					ITEM_WEAPON;
	ShotType = 				WEAPON_SPREAD;
	AttackSpeed = 			10.0;
	EnergyCost = 			1.0;
	FirePower = 			15.0;
	Weight = 				1.0;
	Mesh = 					"Shell";--模型文件名
	Bonus = {
		{ATTR_MAX_HP, IS_RATIO, 10.0};--{属性，是否是比例，值}
		{ATTR_MAX_EN, IS_FIXED, 20.0};
		{ATTR_MELEE_POWER, IS_FIXED, 10.0};
		{ATTR_RANGE_POWER, IS_RATIO, 10.0};
		--需要更多的值就按格式加新行
	};
	Description = 			"这是一把测试用的枪，能打子弹，用来砸人也很疼";
}

--使用时调用，c为数据缓存
function OnUse(inter,c)
	print("ItemUsed");
end

--在人物身上时每帧调用，c为数据缓存,deltaTime为帧间隔
function OnUpdate(inter, deltaTime)
	local c = inter:GetCache();
	local time = c:LoadValue(1);
	local count = c:LoadValue(2);

	if (time == nil) then
		time = 0.0;
	end
	if (count == nil) then
		count = 0;
	end

	time = time + deltaTime;
	if (time > 1.0) then
		time = 0.0
		count = count + 1;
		print("test, "..count.."s");
		c:StoreValue(2, count);
	end
	c:StoreValue(1, time);
end

function OnHit(inter, enemy)
	local buff = {
		Name =				"Cracker Buff";
		Description =		"降低防御力";
		MaxStackNum =		5;
		Duration =			1.0;
		Stackable =			true;
		Bonus = {
			{ATTR_ARMOR, IS_FIXED, -1.0};
			--buff层数改变时会增减这里包含的所有属性*层数改变量
		};
		OnAttach = function(inter)
			--当buff被添加到实体上时调用 do nothing
			print("Buff Attached!");
		end;
		OnDetach = function(inter)
			--当buff消失时调用（持续时间到或被移除） do nothing
		end;
		OnUpdate = function(inter,time)
			--每帧调用 do nothing
			--print(""..inter:GetStackNum().." Buff Update Event!")
		end;
		OnDamaged = function(inter,damage)
			--带有这个buff的实体被伤害时调用 do nothing
		end;
		--这种事件触发的函数可以扩展，只需要在相应的位置添加调用即可
	};

	local b = Buff.BuffInterface.CreateBuff(buff);
	enemy:AddBuff(b);
end